{"ast":null,"code":"import axios from 'axios';\nclass AuthService {\n  login(email, password) {\n    return axios.post('http://localhost:5010/api/v1/auth/login', {\n      email,\n      password\n    }).then(response => {\n      // If authentication succeeds, store the token in localStorage\n      localStorage.setItem('token', response.data.token);\n      return response.data;\n    }).catch(error => {\n      throw error.response.data;\n    });\n  }\n  register(fName, lName, email, nationality, password) {\n    return axios.post('http://localhost:5010/api/v1/auth/register', {\n      fName,\n      lName,\n      email,\n      nationality,\n      password\n    }).then(response => {\n      // If registration succeeds, store the token in localStorage\n      localStorage.setItem('token', response.data.token);\n      return response.data;\n    }).catch(error => {\n      console.log(error.response.data);\n      throw error.response.data;\n    });\n  }\n  logout() {\n    // Clear the token from localStorage\n    localStorage.removeItem('token');\n  }\n  isAuthenticated() {\n    // Check if the token is present in localStorage\n    return localStorage.getItem('token') !== null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","AuthService","login","email","password","post","then","response","localStorage","setItem","data","token","catch","error","register","fName","lName","nationality","console","log","logout","removeItem","isAuthenticated","getItem"],"sources":["/Users/hidaya/travel/src/components/AuthService.js"],"sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  login(email, password) {\n    return axios\n      .post('http://localhost:5010/api/v1/auth/login', { email, password })\n      .then((response) => {\n        // If authentication succeeds, store the token in localStorage\n        localStorage.setItem('token', response.data.token);\n        return response.data;\n      })\n      .catch((error) => {\n        throw error.response.data;\n      });\n  }\n\n  register(fName, lName, email, nationality ,password) {\n    return axios\n      .post('http://localhost:5010/api/v1/auth/register', { fName, lName, email,nationality, password})\n      .then((response) => {\n        // If registration succeeds, store the token in localStorage\n        localStorage.setItem('token', response.data.token);\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error.response.data)\n        throw error.response.data;\n      });\n  }\n\n  logout() {\n    // Clear the token from localStorage\n    localStorage.removeItem('token');\n  }\n\n  isAuthenticated() {\n    // Check if the token is present in localStorage\n    return localStorage.getItem('token') !== null;\n  }\n}\n\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrB,OAAOJ,KAAK,CACTK,IAAI,CAAC,yCAAyC,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC,CACpEE,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;MAClD,OAAOJ,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChB,MAAMA,KAAK,CAACN,QAAQ,CAACG,IAAI;IAC3B,CAAC,CAAC;EACN;EAEAI,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAEb,KAAK,EAAEc,WAAW,EAAEb,QAAQ,EAAE;IACnD,OAAOJ,KAAK,CACTK,IAAI,CAAC,4CAA4C,EAAE;MAAEU,KAAK;MAAEC,KAAK;MAAEb,KAAK;MAACc,WAAW;MAAEb;IAAQ,CAAC,CAAC,CAChGE,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;MAClD,OAAOJ,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBK,OAAO,CAACC,GAAG,CAACN,KAAK,CAACN,QAAQ,CAACG,IAAI,CAAC;MAChC,MAAMG,KAAK,CAACN,QAAQ,CAACG,IAAI;IAC3B,CAAC,CAAC;EACN;EAEAU,MAAMA,CAAA,EAAG;IACP;IACAZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,eAAeA,CAAA,EAAG;IAChB;IACA,OAAOd,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C;AACF;AAEA,eAAe,IAAItB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}