{"ast":null,"code":"var _jsxFileName = \"/Users/hidaya/travel/src/components/PrivateRoutes.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport AuthService from './AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = _ref => {\n  let {} = _ref;\n  const isAuthenticated = AuthService.isAuthenticated();\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 41\n  }, this);\n};\n_c = PrivateRoutes;\nexport default PrivateRoutes;\n\n// import React from 'react';\n// import { Navigate, Outlet } from 'react-router-dom';\n// const PrivateRoute = () => {\n//     const auth = null; // determine if authorized, from context or however you're doing it\n//     // If authorized, return an outlet that will render child elements\n//     // If not, return element that will navigate to login page\n//     return auth ? <Outlet /> : <Navigate to=\"/login\" />;\n// }\n// export default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["React","Navigate","Outlet","AuthService","jsxDEV","_jsxDEV","PrivateRoutes","_ref","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/hidaya/travel/src/components/PrivateRoutes.js"],"sourcesContent":["import React from 'react';\nimport { Navigate,Outlet} from 'react-router-dom';\nimport AuthService from './AuthService';\n\nconst PrivateRoutes = ({}) => {\n  const isAuthenticated = AuthService.isAuthenticated();\n  return (\n    \n          isAuthenticated ? <Outlet/> : <Navigate to=\"/login\" />\n      \n  );\n};\n\nexport default PrivateRoutes;\n\n// import React from 'react';\n// import { Navigate, Outlet } from 'react-router-dom';\n// const PrivateRoute = () => {\n//     const auth = null; // determine if authorized, from context or however you're doing it\n//     // If authorized, return an outlet that will render child elements\n//     // If not, return element that will navigate to login page\n//     return auth ? <Outlet /> : <Navigate to=\"/login\" />;\n// }\n// export default PrivateRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAACC,MAAM,QAAO,kBAAkB;AACjD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAAQ;EAAA,IAAP,CAAC,CAAC,GAAAA,IAAA;EACvB,MAAMC,eAAe,GAAGL,WAAW,CAACK,eAAe,CAAC,CAAC;EACrD,OAEQA,eAAe,gBAAGH,OAAA,CAACH,MAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,gBAAGP,OAAA,CAACJ,QAAQ;IAACY,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAGhE,CAAC;AAACE,EAAA,GAPIR,aAAa;AASnB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}