{"ast":null,"code":"import axios from 'axios';\nclass AuthService {\n  login(email, password) {\n    return axios.post('http://localhost:5010/api/v1/auth/login', {\n      email,\n      password\n    }).then(response => {\n      return response.data.userId;\n    }).catch(error => {\n      return Promise.reject(error.response.data);\n    });\n  }\n  register(fName, lName, email, nationality, password) {\n    return axios.post('http://localhost:5010/api/v1/auth/register', {\n      fName,\n      lName,\n      email,\n      nationality,\n      password\n    }).then(response => {\n      return response.data.userId;\n    }).catch(error => {\n      return Promise.reject(error.response.data);\n    });\n  }\n  logout() {\n    // Clear the token from localStorage\n    localStorage.removeItem('token');\n  }\n  isAuthenticated() {\n    // Check if the token is present in localStorage\n    return localStorage.getItem('token') !== null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","AuthService","login","email","password","post","then","response","data","userId","catch","error","Promise","reject","register","fName","lName","nationality","logout","localStorage","removeItem","isAuthenticated","getItem"],"sources":["/Users/hidaya/travel/src/components/AuthService.js"],"sourcesContent":["import axios from 'axios';\n\n\nclass AuthService {\n  login(email, password) {\n    return axios\n      .post('http://localhost:5010/api/v1/auth/login', { email, password })\n      .then((response) => {\n        return response.data.userId;\n      })\n      .catch((error) => {\n        return Promise.reject(error.response.data);\n      });\n  }\n  \n  register(fName, lName, email, nationality, password) {\n    return axios\n      .post('http://localhost:5010/api/v1/auth/register', { fName, lName, email, nationality, password })\n      .then((response) => {\n        return response.data.userId;\n      })\n      .catch((error) => {\n        return Promise.reject(error.response.data);\n      });\n  }\n  \n    logout() {\n      // Clear the token from localStorage\n      localStorage.removeItem('token');\n    }\n  \n    isAuthenticated() {\n      // Check if the token is present in localStorage\n      return localStorage.getItem('token') !== null;\n    }\n  }\nexport default new AuthService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrB,OAAOJ,KAAK,CACTK,IAAI,CAAC,yCAAyC,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC,CACpEE,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAACC,MAAM;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAACJ,QAAQ,CAACC,IAAI,CAAC;IAC5C,CAAC,CAAC;EACN;EAEAM,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAEb,KAAK,EAAEc,WAAW,EAAEb,QAAQ,EAAE;IACnD,OAAOJ,KAAK,CACTK,IAAI,CAAC,4CAA4C,EAAE;MAAEU,KAAK;MAAEC,KAAK;MAAEb,KAAK;MAAEc,WAAW;MAAEb;IAAS,CAAC,CAAC,CAClGE,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAACC,MAAM;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAACJ,QAAQ,CAACC,IAAI,CAAC;IAC5C,CAAC,CAAC;EACN;EAEEU,MAAMA,CAAA,EAAG;IACP;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,eAAeA,CAAA,EAAG;IAChB;IACA,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C;AACF;AACF,eAAe,IAAIrB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}